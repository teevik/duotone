{"version":3,"sources":["styling/constants.ts","helpers/createImage.ts","helpers/createDuotoneImage.ts","components/ColorPicker.tsx","hooks/useOnClickOutside.ts","components/ImageEditor.tsx","hooks/useIsFullscreen.ts","components/Uploader.tsx","components/DuotoneCreator.tsx","helpers/readFileAsDataURL.ts","components/Hero.tsx","components/App.tsx","index.tsx"],"names":["deviceSizes","mediaQueries","mobile","concat","desktop","createImage","src","Promise","resolve","reject","image","Image","onerror","error","onabort","onload","createDuotoneImage","shadowColor","highlightColor","duotoneImageData","imageData","data","maxValue","minValue","i","length","value","grayscaleImage","ctx","OffscreenCanvas","width","height","getContext","drawImage","getImageData","gradient","r","g","b","gradientMap","ColorPicker","props","ref","handler","title","color","onChange","containerRef","useRef","_useState","useState","_useState2","Object","slicedToArray","pickerIsOpen","setPickerIsOpen","closePicker","useCallback","togglePicker","prevValue","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","colorHex","rgb","react_default","a","createElement","Container","Display","style","backgroundColor","onClick","Information","Title","Hex","Picker","isOpen","disableAlpha","onChangeComplete","colors","styled","div","withConfig","displayName","componentId","rgba","ChromePicker","css","p","defaultShadowColor","defaultHighlightColor","ImageEditor","canvasRef","setShadowColor","_useState3","_useState4","setHighlightColor","isFullscreen","setIsFullscreen","onFullscreenChange","Boolean","fullscreenElement","useIsFullscreen","options","putImageData","useDuotoneCanvas","imageRatio","ImageEditor_Container","CanvasContainer","maxWidth","Canvas","CanvasOverlay","hide","onClose","Divider","ColorControls","IconButton","SwapHoriz_esm","Actions","FileDownload_esm","toBlob","blob","saveAs","Fullscreen_esm","requestFullscreen","canvas","hr","button","Uploader","_useDropzone","useDropzone","onDrop","acceptedFiles","isEmpty","file","onUpload","getRootProps","getInputProps","Uploader_Container","Text","Highlighted","span","DuotoneCreator","setImage","content","key","undefined","reader","FileReader","result","readAsDataURL","readFileAsDataURL","then","DuotoneCreator_Container","transitionName","transitionEnterTimeout","transitionLeaveTimeout","ReactCSSTransitionReplace","Hero","Hero_Title","SourceLink","href","h1","GlobalStyles","createGlobalStyle","_templateObject","ReactDOM","render","Fragment","App_Container","getElementById"],"mappings":"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","file":"static/js/main.6a740fbd.chunk.js","sourcesContent":["export const colors = {\r\n  primary: \"#00bfa5\",\r\n  error: \"#d50000\"\r\n}\r\n\r\nconst deviceSizes = {\r\n  desktop: \"500px\"\r\n}\r\n\r\nexport const mediaQueries = {\r\n  mobile: `(max-width: ${deviceSizes.desktop})`,\r\n  desktop: `(min-width: ${deviceSizes.desktop})`\r\n}\r\n","export function createImage(src: string) {\r\n  return new Promise<HTMLImageElement>((resolve, reject) => {\r\n    const image = new Image()\r\n\r\n    image.onerror = error => reject(error)\r\n    image.onabort = error => reject(error)\r\n    image.onload = () => resolve(image)\r\n\r\n    image.src = src\r\n  })\r\n}\r\n","import { RGBColor } from \"react-color\"\r\n\r\nfunction getImageData(image: HTMLImageElement) {\r\n  const canvas = new OffscreenCanvas(image.width, image.height)\r\n  const ctx = (canvas.getContext(\"2d\") as any) as CanvasRenderingContext2D\r\n\r\n  ctx.drawImage(image, 0, 0)\r\n  return ctx.getImageData(0, 0, image.width, image.height)\r\n}\r\n\r\nfunction grayscaleImage(imageData: ImageData) {\r\n  const { data } = imageData\r\n\r\n  let maxValue = 0\r\n  let minValue = 255\r\n\r\n  for (let i = 0; i < data.length; i += 4) {\r\n    // Fetch maximum and minimum pixel values\r\n    if (data[i] > maxValue) {\r\n      maxValue = data[i]\r\n    }\r\n\r\n    if (data[i] < minValue) {\r\n      minValue = data[i]\r\n    }\r\n    // Grayscale by averaging RGB values\r\n    const r = data[i]\r\n    const g = data[i + 1]\r\n    const b = data[i + 2]\r\n    const value = 0.3333 * r + 0.3333 * g + 0.3333 * b\r\n    data[i] = data[i + 1] = data[i + 2] = value\r\n  }\r\n\r\n  for (let i = 0; i < data.length; i += 4) {\r\n    // Normalize each pixel to scale 0-255\r\n    const value = ((data[i] - minValue) * 255) / (maxValue - minValue)\r\n    data[i] = data[i + 1] = data[i + 2] = value\r\n  }\r\n\r\n  return imageData\r\n}\r\n\r\nfunction gradientMap(shadowColor: RGBColor, highlightColor: RGBColor) {\r\n  const gradient: number[] = []\r\n\r\n  for (let i = 0; i < 256 * 4; i += 4) {\r\n    gradient[i] = ((256 - i / 4) * shadowColor.r + (i / 4) * highlightColor.r) / 256\r\n    gradient[i + 1] = ((256 - i / 4) * shadowColor.g + (i / 4) * highlightColor.g) / 256\r\n    gradient[i + 2] = ((256 - i / 4) * shadowColor.b + (i / 4) * highlightColor.b) / 256\r\n    gradient[i + 3] = 255\r\n  }\r\n\r\n  return gradient\r\n}\r\n\r\nexport function createDuotoneImage(\r\n  image: HTMLImageElement,\r\n  shadowColor: RGBColor,\r\n  highlightColor: RGBColor\r\n) {\r\n  const imageData = getImageData(image)\r\n  const duotoneImageData = grayscaleImage(imageData)\r\n  const gradient = gradientMap(shadowColor, highlightColor)\r\n  const { data } = duotoneImageData\r\n\r\n  for (var i = 0; i < data.length; i += 4) {\r\n    data[i] = gradient[data[i] * 4]\r\n    data[i + 1] = gradient[data[i + 1] * 4 + 1]\r\n    data[i + 2] = gradient[data[i + 2] * 4 + 2]\r\n  }\r\n\r\n  return duotoneImageData\r\n}\r\n","import { rgb, rgba } from \"polished\"\r\nimport React, { useCallback, useRef, useState } from \"react\"\r\nimport { ChromePicker, RGBColor } from \"react-color\"\r\nimport styled, { css } from \"styled-components\"\r\nimport { useOnClickOutside } from \"../hooks/useOnClickOutside\"\r\n\r\ninterface ColorPickerProps {\r\n  title: string\r\n  color: RGBColor\r\n  onChange: (color: RGBColor) => void\r\n}\r\n\r\nexport function ColorPicker(props: ColorPickerProps) {\r\n  const { title, color, onChange } = props\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null)\r\n  const [pickerIsOpen, setPickerIsOpen] = useState(false)\r\n\r\n  const closePicker = useCallback(() => setPickerIsOpen(false), [])\r\n  const togglePicker = () => setPickerIsOpen(prevValue => !prevValue)\r\n\r\n  useOnClickOutside(containerRef, closePicker)\r\n\r\n  const colorHex = rgb(color.r, color.g, color.b)\r\n\r\n  return (\r\n    <Container ref={containerRef}>\r\n      <Display\r\n        style={{\r\n          backgroundColor: colorHex\r\n        }}\r\n        onClick={togglePicker}\r\n      />\r\n      <Information>\r\n        <Title onClick={togglePicker}>{title}</Title>\r\n        <Hex>{colorHex}</Hex>\r\n      </Information>\r\n\r\n      <Picker\r\n        isOpen={pickerIsOpen}\r\n        disableAlpha\r\n        color={color}\r\n        onChangeComplete={colors => onChange(colors.rgb)}\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n`\r\n\r\nconst Display = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  box-shadow: 0 3px 6px ${rgba(\"black\", 0.16)};\r\n  margin-right: 15px;\r\n  cursor: pointer;\r\n`\r\n\r\nconst Picker = styled(ChromePicker)<{ isOpen: boolean }>`\r\n  position: absolute;\r\n  left: 48px;\r\n  bottom: 0;\r\n  z-index: 1;\r\n  box-shadow: 0 6px 9px ${rgba(\"black\", 0.16)} !important;\r\n  pointer-events: none;\r\n  opacity: 0;\r\n  transform: translateY(-8px);\r\n\r\n  transition: none 0.2s ease;\r\n  transition-property: opacity, transform;\r\n\r\n  ${props =>\r\n    props.isOpen &&\r\n    css`\r\n      opacity: 1;\r\n      pointer-events: initial;\r\n      transform: translateY(0);\r\n    `}\r\n`\r\n\r\nconst Information = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst Title = styled.p`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  line-height: 24px;\r\n  letter-spacing: 0;\r\n  margin: 0;\r\n  cursor: pointer;\r\n`\r\n\r\nconst Hex = styled.p`\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  line-height: 1;\r\n  letter-spacing: 0;\r\n  margin: 0;\r\n  padding: 2px 4px;\r\n  background-color: #ededed;\r\n  color: ${rgba(\"black\", 0.7)};\r\n  align-self: flex-start;\r\n  border-radius: 4px;\r\n`\r\n","import { RefObject, useEffect } from \"react\"\r\n\r\nexport function useOnClickOutside(\r\n  ref: RefObject<HTMLElement>,\r\n  handler: () => void\r\n) {\r\n  useEffect(() => {\r\n    const listener = (event: MouseEvent | TouchEvent) => {\r\n      if (!ref.current) return\r\n      if (ref.current.contains(event.target as any)) return\r\n\r\n      handler()\r\n    }\r\n\r\n    document.addEventListener(\"mousedown\", listener)\r\n    document.addEventListener(\"touchstart\", listener)\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener)\r\n      document.removeEventListener(\"touchstart\", listener)\r\n    }\r\n  }, [ref, handler])\r\n}\r\n","import { saveAs } from \"file-saver\"\r\nimport { rgba } from \"polished\"\r\nimport React, { RefObject, useEffect, useRef, useState } from \"react\"\r\nimport { RGBColor } from \"react-color\"\r\nimport styled, { css } from \"styled-components\"\r\nimport { FileDownload } from \"styled-icons/material/FileDownload\"\r\nimport { Fullscreen } from \"styled-icons/material/Fullscreen\"\r\nimport { SwapHoriz } from \"styled-icons/material/SwapHoriz\"\r\nimport { createDuotoneImage } from \"../helpers/createDuotoneImage\"\r\nimport { useIsFullscreen } from \"../hooks/useIsFullscreen\"\r\nimport { mediaQueries } from \"../styling/constants\"\r\nimport { ColorPicker } from \"./ColorPicker\"\r\n\r\nconst defaultShadowColor = {\r\n  r: 0,\r\n  g: 0,\r\n  b: 64\r\n}\r\n\r\nconst defaultHighlightColor = {\r\n  r: 216,\r\n  g: 231,\r\n  b: 79\r\n}\r\n\r\ninterface UseDuotoneCanvasOptions {\r\n  canvasRef: RefObject<HTMLCanvasElement>\r\n  image: HTMLImageElement\r\n  shadowColor: RGBColor\r\n  highlightColor: RGBColor\r\n}\r\n\r\nfunction useDuotoneCanvas(options: UseDuotoneCanvasOptions) {\r\n  const { canvasRef, image, shadowColor, highlightColor } = options\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current!\r\n    const ctx = canvas.getContext(\"2d\")!\r\n    const imageData = createDuotoneImage(image, shadowColor, highlightColor)\r\n    ctx.putImageData(imageData, 0, 0)\r\n  }, [canvasRef, highlightColor, image, shadowColor])\r\n}\r\n\r\ninterface ImageEditorProps {\r\n  image: HTMLImageElement\r\n  onClose: () => void\r\n}\r\n\r\nexport function ImageEditor(props: ImageEditorProps) {\r\n  const { image } = props\r\n\r\n  const canvasRef = useRef<HTMLCanvasElement>(null)\r\n  const [shadowColor, setShadowColor] = useState<RGBColor>(defaultShadowColor)\r\n  const [highlightColor, setHighlightColor] = useState<RGBColor>(defaultHighlightColor)\r\n  const isFullscreen = useIsFullscreen()\r\n  useDuotoneCanvas({ canvasRef, image, shadowColor, highlightColor })\r\n\r\n  const onSwapColors = () => {\r\n    setShadowColor(highlightColor)\r\n    setHighlightColor(shadowColor)\r\n  }\r\n\r\n  const onFullscreen = () => {\r\n    const canvas = canvasRef.current!\r\n    canvas.requestFullscreen()\r\n  }\r\n\r\n  const onDownload = () => {\r\n    const canvas = canvasRef.current!\r\n\r\n    canvas.toBlob(blob => saveAs(blob!, \"duotone image.jpeg\"))\r\n  }\r\n\r\n  const imageRatio = image.width / image.height\r\n\r\n  return (\r\n    <Container>\r\n      <CanvasContainer style={{ maxWidth: imageRatio * 400 }}>\r\n        <Canvas ref={canvasRef} width={image.width} height={image.height} />\r\n        <CanvasOverlay hide={isFullscreen} onClick={props.onClose}>\r\n          Select new image\r\n        </CanvasOverlay>\r\n      </CanvasContainer>\r\n      <Divider />\r\n\r\n      <ColorControls>\r\n        <ColorPicker title=\"Shadow Color\" color={shadowColor} onChange={setShadowColor} />\r\n\r\n        <IconButton onClick={onSwapColors}>\r\n          <SwapHoriz />\r\n        </IconButton>\r\n\r\n        <ColorPicker\r\n          title=\"Highlight Color\"\r\n          color={highlightColor}\r\n          onChange={setHighlightColor}\r\n        />\r\n      </ColorControls>\r\n\r\n      <Divider />\r\n\r\n      <Actions>\r\n        <IconButton>\r\n          <FileDownload onClick={onDownload} />\r\n        </IconButton>\r\n        <IconButton>\r\n          <Fullscreen onClick={onFullscreen} />\r\n        </IconButton>\r\n      </Actions>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 30px 0;\r\n`\r\n\r\nconst CanvasContainer = styled.div`\r\n  position: relative;\r\n  align-self: center;\r\n`\r\n\r\nconst Canvas = styled.canvas`\r\n  display: block;\r\n  width: 100%;\r\n`\r\n\r\nconst CanvasOverlay = styled.div<{ hide: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: ${rgba(\"black\", 0.6)};\r\n  color: white;\r\n  font-size: 30px;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n\r\n  transition: opacity 0.2s ease;\r\n\r\n  ${props =>\r\n    !props.hide &&\r\n    css`\r\n      &:hover {\r\n        opacity: 1;\r\n      }\r\n    `}\r\n`\r\n\r\nconst Divider = styled.hr`\r\n  border: 2px solid ${rgba(\"black\", 0.1)};\r\n  margin: 30px 0;\r\n`\r\n\r\nconst IconButton = styled.button`\r\n  opacity: 0.8;\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n\r\n  transition: opacity 0.2s ease;\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n\r\n  & > svg {\r\n    width: 30px;\r\n    height: 30px;\r\n  }\r\n`\r\n\r\nconst Actions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  ${IconButton} {\r\n    margin: 0 15px;\r\n  }\r\n`\r\n\r\nconst ColorControls = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  ${IconButton} {\r\n    margin: 0 20px;\r\n  }\r\n\r\n  @media ${mediaQueries.mobile} {\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    ${IconButton} {\r\n      margin: 20px 0;\r\n    }\r\n  }\r\n`\r\n","import { useEffect, useState } from \"react\"\r\n\r\nexport function useIsFullscreen() {\r\n  const [isFullscreen, setIsFullscreen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const onFullscreenChange = () => {\r\n      setIsFullscreen(Boolean(document.fullscreenElement))\r\n    }\r\n\r\n    document.addEventListener(\"fullscreenchange\", onFullscreenChange)\r\n    return () => document.removeEventListener(\"fullscreenchange\", onFullscreenChange)\r\n  }, [])\r\n\r\n  return isFullscreen\r\n}\r\n","import { rgba } from \"polished\"\r\nimport { isEmpty } from \"ramda\"\r\nimport React from \"react\"\r\nimport { useDropzone } from \"react-dropzone\"\r\nimport styled from \"styled-components\"\r\n\r\ninterface UploaderProps {\r\n  onUpload: (file: File) => void\r\n}\r\n\r\nexport function Uploader(props: UploaderProps) {\r\n  const onDrop = (acceptedFiles: File[]) => {\r\n    if (!isEmpty(acceptedFiles)) {\r\n      const file = acceptedFiles[0]\r\n\r\n      props.onUpload(file)\r\n    }\r\n  }\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop })\r\n\r\n  return (\r\n    <Container {...getRootProps()}>\r\n      <input {...getInputProps()} />\r\n      <Text>\r\n        <Highlighted>Browse</Highlighted> or drag images here\r\n      </Text>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex: 1;\r\n  min-height: 200px;\r\n  cursor: pointer;\r\n`\r\n\r\nconst Text = styled.p`\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  line-height: 28px;\r\n  letter-spacing: 0.04em;\r\n  margin: 0;\r\n  text-align: center;\r\n  color: ${rgba(\"black\", 0.6)};\r\n  font-weight: 500;\r\n`\r\n\r\nconst Highlighted = styled.span`\r\n  background-color: ${rgba(\"black\", 0.1)};\r\n  padding: 3px 9px;\r\n  border-radius: 50px;\r\n`\r\n","import { rgba } from \"polished\"\r\nimport React, { useState } from \"react\"\r\nimport ReactCSSTransitionReplace from \"react-css-transition-replace\"\r\nimport styled from \"styled-components\"\r\nimport { createImage } from \"../helpers/createImage\"\r\nimport { readFileAsDataURL } from \"../helpers/readFileAsDataURL\"\r\nimport { ImageEditor } from \"./ImageEditor\"\r\nimport { Uploader } from \"./Uploader\"\r\n\r\nexport function DuotoneCreator() {\r\n  const [image, setImage] = useState<HTMLImageElement>()\r\n\r\n  const onUpload = (file: File) => {\r\n    readFileAsDataURL(file)\r\n      .then(createImage)\r\n      .then(setImage)\r\n  }\r\n\r\n  const onClose = () => setImage(undefined)\r\n\r\n  const content = image ? (\r\n    <ImageEditor key=\"image-editor\" image={image} onClose={onClose} />\r\n  ) : (\r\n    <Uploader key=\"uploader\" onUpload={onUpload} />\r\n  )\r\n\r\n  return (\r\n    <Container\r\n      transitionName=\"cross-fade\"\r\n      transitionEnterTimeout={1000}\r\n      transitionLeaveTimeout={500}\r\n    >\r\n      {content}\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled(ReactCSSTransitionReplace)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  margin: 50px 0;\r\n  box-shadow: 0 3px 6px ${rgba(\"black\", 0.16)};\r\n  border-radius: 4px;\r\n\r\n  .cross-fade-leave {\r\n    opacity: 1;\r\n  }\r\n  .cross-fade-leave.cross-fade-leave-active {\r\n    opacity: 0;\r\n    transition: opacity 0.5s ease;\r\n  }\r\n\r\n  .cross-fade-enter {\r\n    opacity: 0;\r\n  }\r\n  .cross-fade-enter.cross-fade-enter-active {\r\n    opacity: 1;\r\n    transition: opacity 0.5s ease;\r\n    transition-delay: 0.5s;\r\n  }\r\n\r\n  &.cross-fade-height {\r\n    transition: height 0.5s ease;\r\n  }\r\n`\r\n","export function readFileAsDataURL(file: File) {\r\n  return new Promise<string>((resolve, reject) => {\r\n    const reader = new FileReader()\r\n\r\n    reader.onerror = error => reject(error)\r\n    reader.onabort = error => reject(error)\r\n    reader.onload = () => resolve(reader.result as string)\r\n\r\n    reader.readAsDataURL(file)\r\n  })\r\n}\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { mediaQueries } from \"../styling/constants\"\r\n\r\nexport function Hero() {\r\n  return (\r\n    <div>\r\n      <Title>Duotone Image Generator</Title>\r\n      <SourceLink href=\"https://github.com/teevik/duotone\">Source</SourceLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Title = styled.h1`\r\n  margin: 0;\r\n  line-height: 48px;\r\n  font-weight: 400;\r\n  opacity: 0.75;\r\n\r\n  @media ${mediaQueries.desktop} {\r\n    font-size: 50px;\r\n    margin-top: 50px;\r\n  }\r\n\r\n  @media ${mediaQueries.mobile} {\r\n    font-size: 35px;\r\n  }\r\n`\r\n\r\nconst SourceLink = styled.a`\r\n  display: inline-block;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  line-height: 24px;\r\n  letter-spacing: 0.04em;\r\n  color: #00594d;\r\n  opacity: 0.7;\r\n  margin-top: 10px;\r\n`\r\n","import React from \"react\"\r\nimport styled, { createGlobalStyle } from \"styled-components\"\r\nimport { mediaQueries } from \"../styling/constants\"\r\nimport { DuotoneCreator } from \"./DuotoneCreator\"\r\nimport { Hero } from \"./Hero\"\r\n\r\nexport function App() {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Hero />\r\n        <DuotoneCreator />\r\n      </Container>\r\n\r\n      <GlobalStyles />\r\n    </>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n\r\n  @media ${mediaQueries.desktop} {\r\n    padding: 30px;\r\n  }\r\n\r\n  @media ${mediaQueries.mobile} {\r\n    padding: 10px;\r\n  }\r\n`\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  .js-focus-visible *:focus:not(.focus-visible) {\r\n    outline: none;\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    text-decoration: inherit;\r\n    color: inherit;\r\n    font-family: inherit;\r\n    font-family: \"Roboto\", sans-serif;\r\n  }\r\n\r\n  body {\r\n    background-color: hsl(0, 0%, 95%);\r\n    font-weight: 400;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    font-weight: 500;\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { App } from \"./components/App\"\r\nimport \"./polyfills\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n"],"sourceRoot":""}