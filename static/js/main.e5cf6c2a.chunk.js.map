{"version":3,"sources":["workers/ImageWorker.ts","styling/constants.ts","helpers/createImage.ts","helpers/getImageData.ts","components/ColorPicker.tsx","hooks/useOnClickOutside.ts","components/ImageEditor.tsx","hooks/useIsFullscreen.ts","components/Uploader.tsx","components/DuotoneCreator.tsx","helpers/readFileAsDataURL.ts","components/Hero.tsx","components/App.tsx","index.tsx"],"names":["module","exports","Worker","__webpack_require__","p","deviceSizes","mediaQueries","mobile","concat","desktop","createImage","src","Promise","resolve","reject","image","Image","onerror","error","onabort","onload","getImageData","ctx","OffscreenCanvas","width","height","getContext","drawImage","ColorPicker","props","ref","handler","title","color","onChange","containerRef","useRef","_useState","useState","_useState2","Object","slicedToArray","pickerIsOpen","setPickerIsOpen","closePicker","useCallback","togglePicker","prevValue","useEffect","listener","event","current","contains","target","document","addEventListener","removeEventListener","colorHex","rgb","r","g","b","react_default","a","createElement","Container","Display","style","backgroundColor","onClick","Information","Title","Hex","Picker","isOpen","disableAlpha","colors","styled","div","withConfig","displayName","componentId","rgba","ChromePicker","css","imageWorker","ImageWorker","defaultShadowColor","defaultHighlightColor","ImageEditor","canvasRef","shadowColor","setShadowColor","_useState3","_useState4","highlightColor","setHighlightColor","isFullscreen","setIsFullscreen","onFullscreenChange","Boolean","fullscreenElement","useIsFullscreen","offscreenCanvas","transferControlToOffscreen","postMessage","type","canvas","imageData","useDuotoneCanvas","imageRatio","ImageEditor_Container","CanvasContainer","maxWidth","Canvas","CanvasOverlay","hide","onClose","Divider","ColorControls","IconButton","SwapHoriz_esm","Actions","FileDownload_esm","toBlob","blob","saveAs","Fullscreen_esm","requestFullscreen","hr","button","Uploader","_useDropzone","useDropzone","onDrop","acceptedFiles","isEmpty","file","onUpload","getRootProps","getInputProps","Uploader_Container","Text","Highlighted","span","DuotoneCreator","setImage","content","key","undefined","reader","FileReader","result","readAsDataURL","readFileAsDataURL","then","DuotoneCreator_Container","transitionName","transitionEnterTimeout","transitionLeaveTimeout","ReactCSSTransitionReplace","Hero","Hero_Title","SourceLink","href","h1","GlobalStyles","createGlobalStyle","_templateObject","ReactDOM","render","Fragment","App_Container","getElementById"],"mappings":"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","file":"static/js/main.e5cf6c2a.chunk.js","sourcesContent":["module.exports = function() {\n  return new Worker(__webpack_public_path__ + \"b026123871adaf11c170.worker.js\");\n};","export const colors = {\r\n  primary: \"#00bfa5\",\r\n  error: \"#d50000\"\r\n}\r\n\r\nconst deviceSizes = {\r\n  desktop: \"500px\"\r\n}\r\n\r\nexport const mediaQueries = {\r\n  mobile: `(max-width: ${deviceSizes.desktop})`,\r\n  desktop: `(min-width: ${deviceSizes.desktop})`\r\n}\r\n","export function createImage(src: string) {\r\n  return new Promise<HTMLImageElement>((resolve, reject) => {\r\n    const image = new Image()\r\n\r\n    image.onerror = error => reject(error)\r\n    image.onabort = error => reject(error)\r\n    image.onload = () => resolve(image)\r\n\r\n    image.src = src\r\n  })\r\n}\r\n","export function getImageData(image: HTMLImageElement) {\r\n  const canvas = new OffscreenCanvas(image.width, image.height)\r\n  const ctx = (canvas.getContext(\"2d\") as any) as CanvasRenderingContext2D\r\n\r\n  ctx.drawImage(image, 0, 0)\r\n  return ctx.getImageData(0, 0, image.width, image.height)\r\n}","import { rgb, rgba } from \"polished\"\r\nimport React, { useCallback, useRef, useState } from \"react\"\r\nimport { ChromePicker, RGBColor } from \"react-color\"\r\nimport styled, { css } from \"styled-components\"\r\nimport { useOnClickOutside } from \"../hooks/useOnClickOutside\"\r\n\r\ninterface ColorPickerProps {\r\n  title: string\r\n  color: RGBColor\r\n  onChange: (color: RGBColor) => void\r\n}\r\n\r\nexport function ColorPicker(props: ColorPickerProps) {\r\n  const { title, color, onChange } = props\r\n\r\n  const containerRef = useRef<HTMLDivElement>(null)\r\n  const [pickerIsOpen, setPickerIsOpen] = useState(false)\r\n\r\n  const closePicker = useCallback(() => setPickerIsOpen(false), [])\r\n  const togglePicker = () => setPickerIsOpen(prevValue => !prevValue)\r\n\r\n  useOnClickOutside(containerRef, closePicker)\r\n\r\n  const colorHex = rgb(color.r, color.g, color.b)\r\n\r\n  return (\r\n    <Container ref={containerRef}>\r\n      <Display\r\n        style={{\r\n          backgroundColor: colorHex\r\n        }}\r\n        onClick={togglePicker}\r\n      />\r\n      <Information>\r\n        <Title onClick={togglePicker}>{title}</Title>\r\n        <Hex>{colorHex}</Hex>\r\n      </Information>\r\n\r\n      <Picker\r\n        isOpen={pickerIsOpen}\r\n        disableAlpha\r\n        color={color}\r\n        onChange={colors => onChange(colors.rgb)}\r\n      />\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  position: relative;\r\n`\r\n\r\nconst Display = styled.div`\r\n  width: 40px;\r\n  height: 40px;\r\n  border-radius: 50%;\r\n  box-shadow: 0 3px 6px ${rgba(\"black\", 0.16)};\r\n  margin-right: 15px;\r\n  cursor: pointer;\r\n`\r\n\r\nconst Picker = styled(ChromePicker)<{ isOpen: boolean }>`\r\n  position: absolute;\r\n  left: 48px;\r\n  bottom: 0;\r\n  z-index: 1;\r\n  box-shadow: 0 6px 9px ${rgba(\"black\", 0.16)} !important;\r\n  pointer-events: none;\r\n  opacity: 0;\r\n  transform: translateY(-8px);\r\n\r\n  transition: none 0.2s ease;\r\n  transition-property: opacity, transform;\r\n\r\n  ${props =>\r\n    props.isOpen &&\r\n    css`\r\n      opacity: 1;\r\n      pointer-events: initial;\r\n      transform: translateY(0);\r\n    `}\r\n`\r\n\r\nconst Information = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst Title = styled.p`\r\n  font-size: 14px;\r\n  font-weight: 500;\r\n  line-height: 24px;\r\n  letter-spacing: 0;\r\n  margin: 0;\r\n  cursor: pointer;\r\n`\r\n\r\nconst Hex = styled.p`\r\n  font-size: 12px;\r\n  font-weight: 400;\r\n  line-height: 1;\r\n  letter-spacing: 0;\r\n  margin: 0;\r\n  padding: 2px 4px;\r\n  background-color: #ededed;\r\n  color: ${rgba(\"black\", 0.7)};\r\n  align-self: flex-start;\r\n  border-radius: 4px;\r\n`\r\n","import { RefObject, useEffect } from \"react\"\r\n\r\nexport function useOnClickOutside(\r\n  ref: RefObject<HTMLElement>,\r\n  handler: () => void\r\n) {\r\n  useEffect(() => {\r\n    const listener = (event: MouseEvent | TouchEvent) => {\r\n      if (!ref.current) return\r\n      if (ref.current.contains(event.target as any)) return\r\n\r\n      handler()\r\n    }\r\n\r\n    document.addEventListener(\"mousedown\", listener)\r\n    document.addEventListener(\"touchstart\", listener)\r\n\r\n    return () => {\r\n      document.removeEventListener(\"mousedown\", listener)\r\n      document.removeEventListener(\"touchstart\", listener)\r\n    }\r\n  }, [ref, handler])\r\n}\r\n","import { saveAs } from \"file-saver\"\r\nimport { rgba } from \"polished\"\r\nimport React, { RefObject, useEffect, useRef, useState } from \"react\"\r\nimport { RGBColor } from \"react-color\"\r\nimport styled, { css } from \"styled-components\"\r\nimport { FileDownload } from \"styled-icons/material/FileDownload\"\r\nimport { Fullscreen } from \"styled-icons/material/Fullscreen\"\r\nimport { SwapHoriz } from \"styled-icons/material/SwapHoriz\"\r\n// eslint-disable-next-line import/no-webpack-loader-syntax\r\nimport ImageWorker from \"worker-loader!../workers/ImageWorker\"\r\nimport { getImageData } from \"../helpers/getImageData\"\r\nimport { useIsFullscreen } from \"../hooks/useIsFullscreen\"\r\nimport { mediaQueries } from \"../styling/constants\"\r\nimport { ColorPicker } from \"./ColorPicker\"\r\n\r\nconst imageWorker = new ImageWorker()\r\n\r\nconst defaultShadowColor = {\r\n  r: 0,\r\n  g: 0,\r\n  b: 64\r\n}\r\n\r\nconst defaultHighlightColor = {\r\n  r: 216,\r\n  g: 231,\r\n  b: 79\r\n}\r\n\r\ninterface UseDuotoneCanvasProps {\r\n  canvasRef: RefObject<HTMLCanvasElement>\r\n  image: HTMLImageElement\r\n  shadowColor: RGBColor\r\n  highlightColor: RGBColor\r\n}\r\n\r\nfunction useDuotoneCanvas(props: UseDuotoneCanvasProps) {\r\n  const { canvasRef, image, shadowColor, highlightColor } = props\r\n\r\n  useEffect(() => {\r\n    const canvas = canvasRef.current!\r\n    const offscreenCanvas = canvas.transferControlToOffscreen()\r\n\r\n    imageWorker.postMessage({ type: \"initialize\", canvas: offscreenCanvas }, [\r\n      offscreenCanvas\r\n    ] as any)\r\n  }, [canvasRef])\r\n\r\n  useEffect(() => {\r\n    imageWorker.postMessage({\r\n      type: \"drawDuotoneImage\",\r\n      imageData: getImageData(image),\r\n      shadowColor,\r\n      highlightColor\r\n    })\r\n  }, [highlightColor, image, shadowColor])\r\n}\r\n\r\ninterface ImageEditorProps {\r\n  image: HTMLImageElement\r\n  onClose: () => void\r\n}\r\n\r\nexport function ImageEditor(props: ImageEditorProps) {\r\n  const { image } = props\r\n\r\n  const canvasRef = useRef<HTMLCanvasElement>(null)\r\n  const [shadowColor, setShadowColor] = useState<RGBColor>(defaultShadowColor)\r\n  const [highlightColor, setHighlightColor] = useState<RGBColor>(defaultHighlightColor)\r\n  const isFullscreen = useIsFullscreen()\r\n  useDuotoneCanvas({ canvasRef, image, shadowColor, highlightColor })\r\n\r\n  const onSwapColors = () => {\r\n    setShadowColor(highlightColor)\r\n    setHighlightColor(shadowColor)\r\n  }\r\n\r\n  const onFullscreen = () => {\r\n    const canvas = canvasRef.current!\r\n    canvas.requestFullscreen()\r\n  }\r\n\r\n  const onDownload = () => {\r\n    const canvas = canvasRef.current!\r\n\r\n    canvas.toBlob(blob => saveAs(blob!, \"duotone image.jpeg\"))\r\n  }\r\n\r\n  const imageRatio = image.width / image.height\r\n\r\n  return (\r\n    <Container>\r\n      <CanvasContainer style={{ maxWidth: imageRatio * 400 }}>\r\n        <Canvas ref={canvasRef} width={image.width} height={image.height} />\r\n        <CanvasOverlay hide={isFullscreen} onClick={props.onClose}>\r\n          Select new image\r\n        </CanvasOverlay>\r\n      </CanvasContainer>\r\n      <Divider />\r\n\r\n      <ColorControls>\r\n        <ColorPicker title=\"Shadow Color\" color={shadowColor} onChange={setShadowColor} />\r\n\r\n        <IconButton onClick={onSwapColors}>\r\n          <SwapHoriz />\r\n        </IconButton>\r\n\r\n        <ColorPicker\r\n          title=\"Highlight Color\"\r\n          color={highlightColor}\r\n          onChange={setHighlightColor}\r\n        />\r\n      </ColorControls>\r\n\r\n      <Divider />\r\n\r\n      <Actions>\r\n        <IconButton>\r\n          <FileDownload onClick={onDownload} />\r\n        </IconButton>\r\n        <IconButton>\r\n          <Fullscreen onClick={onFullscreen} />\r\n        </IconButton>\r\n      </Actions>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 30px 0;\r\n`\r\n\r\nconst CanvasContainer = styled.div`\r\n  position: relative;\r\n  align-self: center;\r\n`\r\n\r\nconst Canvas = styled.canvas`\r\n  display: block;\r\n  width: 100%;\r\n`\r\n\r\nconst CanvasOverlay = styled.div<{ hide: boolean }>`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  text-align: center;\r\n  position: absolute;\r\n  top: 0;\r\n  bottom: 0;\r\n  left: 0;\r\n  right: 0;\r\n  background-color: ${rgba(\"black\", 0.6)};\r\n  color: white;\r\n  font-size: 30px;\r\n  opacity: 0;\r\n  cursor: pointer;\r\n\r\n  transition: opacity 0.2s ease;\r\n\r\n  ${props =>\r\n    !props.hide &&\r\n    css`\r\n      &:hover {\r\n        opacity: 1;\r\n      }\r\n    `}\r\n`\r\n\r\nconst Divider = styled.hr`\r\n  border: 2px solid ${rgba(\"black\", 0.1)};\r\n  margin: 30px 0;\r\n`\r\n\r\nconst IconButton = styled.button`\r\n  opacity: 0.8;\r\n  background: none;\r\n  border: none;\r\n  cursor: pointer;\r\n\r\n  transition: opacity 0.2s ease;\r\n\r\n  &:hover {\r\n    opacity: 0.9;\r\n  }\r\n\r\n  & > svg {\r\n    width: 30px;\r\n    height: 30px;\r\n  }\r\n`\r\n\r\nconst Actions = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  ${IconButton} {\r\n    margin: 0 15px;\r\n  }\r\n`\r\n\r\nconst ColorControls = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n\r\n  ${IconButton} {\r\n    margin: 0 20px;\r\n  }\r\n\r\n  @media ${mediaQueries.mobile} {\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n    ${IconButton} {\r\n      margin: 20px 0;\r\n    }\r\n  }\r\n`\r\n","import { useEffect, useState } from \"react\"\r\n\r\nexport function useIsFullscreen() {\r\n  const [isFullscreen, setIsFullscreen] = useState(false)\r\n\r\n  useEffect(() => {\r\n    const onFullscreenChange = () => {\r\n      setIsFullscreen(Boolean(document.fullscreenElement))\r\n    }\r\n\r\n    document.addEventListener(\"fullscreenchange\", onFullscreenChange)\r\n    return () => document.removeEventListener(\"fullscreenchange\", onFullscreenChange)\r\n  }, [])\r\n\r\n  return isFullscreen\r\n}\r\n","import { rgba } from \"polished\"\r\nimport { isEmpty } from \"ramda\"\r\nimport React from \"react\"\r\nimport { useDropzone } from \"react-dropzone\"\r\nimport styled from \"styled-components\"\r\n\r\ninterface UploaderProps {\r\n  onUpload: (file: File) => void\r\n}\r\n\r\nexport function Uploader(props: UploaderProps) {\r\n  const onDrop = (acceptedFiles: File[]) => {\r\n    if (!isEmpty(acceptedFiles)) {\r\n      const file = acceptedFiles[0]\r\n\r\n      props.onUpload(file)\r\n    }\r\n  }\r\n\r\n  const { getRootProps, getInputProps } = useDropzone({ onDrop })\r\n\r\n  return (\r\n    <Container {...getRootProps()}>\r\n      <input {...getInputProps()} />\r\n      <Text>\r\n        <Highlighted>Browse</Highlighted> or drag images here\r\n      </Text>\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex: 1;\r\n  min-height: 200px;\r\n  cursor: pointer;\r\n`\r\n\r\nconst Text = styled.p`\r\n  font-size: 16px;\r\n  font-weight: 400;\r\n  line-height: 28px;\r\n  letter-spacing: 0.04em;\r\n  margin: 0;\r\n  text-align: center;\r\n  color: ${rgba(\"black\", 0.6)};\r\n  font-weight: 500;\r\n`\r\n\r\nconst Highlighted = styled.span`\r\n  background-color: ${rgba(\"black\", 0.1)};\r\n  padding: 3px 9px;\r\n  border-radius: 50px;\r\n`\r\n","import { rgba } from \"polished\"\r\nimport React, { useState } from \"react\"\r\nimport ReactCSSTransitionReplace from \"react-css-transition-replace\"\r\nimport styled from \"styled-components\"\r\nimport { createImage } from \"../helpers/createImage\"\r\nimport { readFileAsDataURL } from \"../helpers/readFileAsDataURL\"\r\nimport { ImageEditor } from \"./ImageEditor\"\r\nimport { Uploader } from \"./Uploader\"\r\n\r\nexport function DuotoneCreator() {\r\n  const [image, setImage] = useState<HTMLImageElement>()\r\n\r\n  const onUpload = (file: File) => {\r\n    readFileAsDataURL(file)\r\n      .then(createImage)\r\n      .then(setImage)\r\n  }\r\n\r\n  const onClose = () => setImage(undefined)\r\n\r\n  const content = image ? (\r\n    <ImageEditor key=\"image-editor\" image={image} onClose={onClose} />\r\n  ) : (\r\n    <Uploader key=\"uploader\" onUpload={onUpload} />\r\n  )\r\n\r\n  return (\r\n    <Container\r\n      transitionName=\"cross-fade\"\r\n      transitionEnterTimeout={1000}\r\n      transitionLeaveTimeout={500}\r\n    >\r\n      {content}\r\n    </Container>\r\n  )\r\n}\r\n\r\nconst Container = styled(ReactCSSTransitionReplace)`\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: white;\r\n  margin: 50px 0;\r\n  box-shadow: 0 3px 6px ${rgba(\"black\", 0.16)};\r\n  border-radius: 4px;\r\n\r\n  .cross-fade-leave {\r\n    opacity: 1;\r\n  }\r\n  .cross-fade-leave.cross-fade-leave-active {\r\n    opacity: 0;\r\n    transition: opacity 0.5s ease;\r\n  }\r\n\r\n  .cross-fade-enter {\r\n    opacity: 0;\r\n  }\r\n  .cross-fade-enter.cross-fade-enter-active {\r\n    opacity: 1;\r\n    transition: opacity 0.5s ease;\r\n    transition-delay: 0.5s;\r\n  }\r\n\r\n  &.cross-fade-height {\r\n    transition: height 0.5s ease;\r\n  }\r\n`\r\n","export function readFileAsDataURL(file: File) {\r\n  return new Promise<string>((resolve, reject) => {\r\n    const reader = new FileReader()\r\n\r\n    reader.onerror = error => reject(error)\r\n    reader.onabort = error => reject(error)\r\n    reader.onload = () => resolve(reader.result as string)\r\n\r\n    reader.readAsDataURL(file)\r\n  })\r\n}\r\n","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { mediaQueries } from \"../styling/constants\"\r\n\r\nexport function Hero() {\r\n  return (\r\n    <div>\r\n      <Title>Duotone Image Generator</Title>\r\n      <SourceLink href=\"https://github.com/teevik/duotone\">Source</SourceLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Title = styled.h1`\r\n  margin: 0;\r\n  line-height: 48px;\r\n  font-weight: 400;\r\n  opacity: 0.75;\r\n\r\n  @media ${mediaQueries.desktop} {\r\n    font-size: 50px;\r\n    margin-top: 50px;\r\n  }\r\n\r\n  @media ${mediaQueries.mobile} {\r\n    font-size: 35px;\r\n  }\r\n`\r\n\r\nconst SourceLink = styled.a`\r\n  display: inline-block;\r\n  font-size: 18px;\r\n  font-weight: 500;\r\n  line-height: 24px;\r\n  letter-spacing: 0.04em;\r\n  color: #00594d;\r\n  opacity: 0.7;\r\n  margin-top: 10px;\r\n`\r\n","import React from \"react\"\r\nimport styled, { createGlobalStyle } from \"styled-components\"\r\nimport { mediaQueries } from \"../styling/constants\"\r\nimport { DuotoneCreator } from \"./DuotoneCreator\"\r\nimport { Hero } from \"./Hero\"\r\n\r\nexport function App() {\r\n  return (\r\n    <>\r\n      <Container>\r\n        <Hero />\r\n        <DuotoneCreator />\r\n      </Container>\r\n\r\n      <GlobalStyles />\r\n    </>\r\n  )\r\n}\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  min-height: 100vh;\r\n  max-width: 1000px;\r\n  margin: 0 auto;\r\n\r\n  @media ${mediaQueries.desktop} {\r\n    padding: 30px;\r\n  }\r\n\r\n  @media ${mediaQueries.mobile} {\r\n    padding: 10px;\r\n  }\r\n`\r\n\r\nconst GlobalStyles = createGlobalStyle`\r\n  .js-focus-visible *:focus:not(.focus-visible) {\r\n    outline: none;\r\n  }\r\n\r\n  * {\r\n    box-sizing: border-box;\r\n    margin: 0;\r\n    padding: 0;\r\n    text-decoration: inherit;\r\n    color: inherit;\r\n    font-family: inherit;\r\n    font-family: \"Roboto\", sans-serif;\r\n  }\r\n\r\n  body {\r\n    background-color: hsl(0, 0%, 95%);\r\n    font-weight: 400;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n  }\r\n\r\n  h1,\r\n  h2,\r\n  h3,\r\n  h4,\r\n  h5,\r\n  h6 {\r\n    font-weight: 500;\r\n  }\r\n`\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport { App } from \"./components/App\"\r\nimport \"./polyfills\"\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"))\r\n"],"sourceRoot":""}